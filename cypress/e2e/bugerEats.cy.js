describe('Buger Eats', () => {
  beforeEach(() => {
    cy.visit('/')
    cy.get('#page-home')
      .and('contain', 'Seja um parceiro entregador pela Buger Eats')
      .should('be.visible')
  })
  it('clica em "Cadastre-se para fazer entregas" então é direcionado para a página de cadastro', () => {
    cy.contains('a', 'Cadastre-se para fazer entregas')
      .should('be.visible')
      .click()
    cy.contains('a', 'Voltar para home')
      .should('be.visible')
  })
  context('Cadastro', () => {
    const cnh = 'carteira-digital.png'
    beforeEach(() => {

      cy.visit('/deliver')
    })

    it('cadastrar entregador com sucesso', () => {
      cy.preencheCamposObrigatorios()
      cy.verificaEnderecoCorreto()
      cy.get('img[alt="Moto"]')
        .should('be.visible')
        .click()
      cy.get('input[accept^="image"]')
        .selectFile('cypress/fixtures/carteira-digital.png', { force: true })
      cy.get('.button-success')
        .should('be.visible')
        .click()
      cy.get('#swal2-html-container')
        .should('be.visible')
        .and('contain', 'Recebemos os seus dados. Fique de olho na sua caixa de email, pois e em breve retornamos o contato.')
      cy.get('.swal2-confirm')
        .should('be.visible')
        .click()
      cy.url()
        .should('be.equal', `${Cypress.config('baseUrl')}`)
    })
    it('verifica que existem 3 métodos de entrega "Moto", "Bicicleta" e "Van/Carro" ', () => {
      cy.get('img[alt="Moto"]')
        .should('be.visible')
      cy.get('img[alt="Bicicleta"]')
        .should('be.visible')
      cy.get('img[alt="Van/Carro"]')
        .should('be.visible')
    })
    context('Erros', () => {
      it('submete o formulário deixando todos os campos em branco', () => {
        cy.get('.button-success')
          .should('be.visible')
          .click()
        cy.get('.alert-error')
          .and('contain', 'É necessário informar o nome')
          .should('be.visible')
          .and('contain', 'É necessário informar o CPF')
          .should('be.visible')
          .and('contain', 'É necessário informar o email')
          .should('be.visible')
          .and('contain', 'É necessário informar o CEP')
          .should('be.visible')
          .and('contain', 'É necessário informar o número do endereço')
          .should('be.visible')
          .and('contain', 'Selecione o método de entrega')
          .should('be.visible')
          .and('contain', 'Adicione uma foto da sua CNH')
          .should('be.visible')
      })
      it('submete o formulário com todos os dados obrigatórios, mas com o campo "CPF" utilizando traços na separação dos números', () => {
        const invalidDocumentFormat = { document: Cypress.env('cpf_error') }
        cy.preencheCamposObrigatorios(invalidDocumentFormat)
        cy.verificaEnderecoCorreto()
        cy.get('img[alt="Moto"]')
          .should('be.visible')
          .click()
        cy.get('input[accept^="image"]')
          .selectFile('cypress/fixtures/carteira-digital.png', { force: true })
        cy.get('.button-success')
          .should('be.visible')
          .click()
        cy.get('.alert-error')
          .and('contain', 'Oops! CPF inválido')
          .should('be.visible')
      })
      it('submete o formulário com todos os dados obrigatórios, mas não adiciono a foto da CNH', () => {
        cy.preencheCamposObrigatorios()
        cy.verificaEnderecoCorreto()
        cy.get('img[alt="Moto"]')
          .should('be.visible')
          .click()
        cy.get('.button-success')
          .should('be.visible')
          .click()
        cy.get('.alert-error')
          .and('contain', 'Adicione uma foto da sua CNH')
          .should('be.visible')
      })
      it('submete o formulário com todos os dados obrigatórios, e adiciono uma foto inválida', () => {
        cy.preencheCamposObrigatorios()
        cy.verificaEnderecoCorreto()
        cy.get('img[alt="Moto"]')
          .should('be.visible')
          .click()
        cy.get('input[accept^="image"]')
          .selectFile('cypress/fixtures/Print Teste Cypress.png', { force: true })
        cy.get('.button-success')
          .should('be.visible')
          .click()
        cy.get('#swal2-html-container')
          .should('not.be.visible')
      })
      it('submete o formulário com todos os dados obrigatórios com o campo "Busca CEP" com valor inválido', () => {
        const invalidCepFormat = { postal_code: Cypress.env('invalid_CEP') }
        cy.preencheCamposObrigatorios(invalidCepFormat)
        cy.get('input[name="address-number"]')
          .type('400')
        cy.get('input[value="undefined/undefined"]')
          .should('be.visible')
      })
      it('submete o formulário com todos os dados obrigatórios com o campo "e-mail" com valor inválido', () => {
        const invalidEmailFormat = { user_email: Cypress.env('invalid_email') }

        cy.preencheCamposObrigatorios(invalidEmailFormat)
        cy.verificaEnderecoCorreto()
        cy.get('img[alt="Moto"]')
          .should('be.visible')
          .click()
        cy.get('input[accept^="image"]')
          .selectFile('cypress/fixtures/carteira-digital.png', { force: true })
        cy.get('.button-success')
          .should('be.visible')
          .click()
        cy.url().should('be.equal', `${Cypress.config('baseUrl')}deliver`)
      })
      it('submete o formulário com todos os dados obrigatório selecionando mais de um método de entrega', () => {
        cy.preencheCamposObrigatorios()
        cy.verificaEnderecoCorreto()
        cy.get('img[alt="Moto"]')
          .should('be.visible')
          .click()
        cy.get('img[alt="Bicicleta"]')
          .should('be.visible')
          .click()
        cy.get('input[accept^="image"]')
          .selectFile('cypress/fixtures/carteira-digital.png', { force: true })
        cy.get('.button-success')
          .should('be.visible')
          .click()
        cy.get('.alert-error')
          .and('contain', 'Oops! Selecione apenas um método de entrega')
          .should('be.visible')
      })
      it('submete o formulário com todos os dados obrigatórios com o campo "Nome completo" com apenas o primeiro nome', () => {
        const invalidNameFormat = { user_name: Cypress.env('user_first_name') }

        cy.preencheCamposObrigatorios(invalidNameFormat)
        cy.verificaEnderecoCorreto()
        cy.get('img[alt="Moto"]')
          .should('be.visible')
          .click()
        cy.get('input[accept^="image"]')
          .selectFile('cypress/fixtures/carteira-digital.png', { force: true })
        cy.get('.button-success')
          .should('be.visible')
          .click()
        cy.get('#swal2-html-container')
          .should('not.be.visible')
      })
    })
  })
}) 

